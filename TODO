# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    TODO                                               :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: qbackaer <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/04/24 17:38:25 by qbackaer          #+#    #+#              #
#    Updated: 2019/04/24 18:18:58 by qbackaer         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

I. PARSING
{
	1. reading input file.
	2. check file format.
	3. check tetras validity.
	4. store tetras -> linked lists (struct).
}

	[ int		parsing(char *filename) ]

	> ouvrir le fichier (error check -> return -1);

	> on lit 21 caracteres (1 tetra + \n) a la fois (read()) et on le stocke;

	> verification a:
		- on verifie la string lue:
		- elle ne doit contenir que des '.' et 4 '#'.
		- elle doit contenir 5 '\n' (tout les 5 caracteres + 1 a la fin).
	
	> stockage:
		- on initialise ou cree une nouvelle node dans la liste (structure).
		- on stock les coordonees des '#' dans la structure correspondante.
	
	> verification b:
		- on verifiee la validite du tetra (tout les '#' doivent etre en contact avec au moins un autre).
	
	> close (error check -> return -1);


